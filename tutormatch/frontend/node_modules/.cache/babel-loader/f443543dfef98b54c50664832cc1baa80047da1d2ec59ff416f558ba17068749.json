{"ast":null,"code":"var _jsxFileName = \"/Users/jiwoo/Desktop/CS_35L/project-6/TutorMatch/tutormatch/frontend/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport './Card.css';\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { useUser } from '../userContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport \"../html/Profile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  userId,\n  onClose\n}) {\n  _s();\n  const [name, setName] = useState('Name');\n  const [major, setMajor] = useState([]);\n  const [about, setAbout] = useState(\"ok\");\n  const [comments, setComments] = useState([]);\n  const [image, setImage] = useState(\"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\");\n  const [newComment, setNewComment] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [course, setCourse] = useState([]);\n  const [phone, setPhone] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n  const [create_date, setCreate_date] = useState(\"\");\n  const [Gender, setGender] = useState(\"\");\n  const [birth, setBirth] = useState(\"\");\n  const {\n    uid,\n    setUid\n  } = useUser();\n  const [error, setError] = useState(null);\n  let navigate = useNavigate();\n\n  // async function setUserInfo(userId) {\n  //     try {\n  //         const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/get-user-info`, {\n  //             method: 'POST',\n  //             headers: {\n  //             'Content-Type': 'application/json'\n  //             },\n  //             body: JSON.stringify({ user: userId })\n  //             },\n  //         );\n  //         if (!response.ok) {\n  //             throw new Error('Network response was not ok');\n  //         }\n  //         const data = await response.json();\n  //         if (data.success) {\n  //             const targetInfo = data.value;\n  //             setMajor(targetInfo.majors);\n  //             console.log(targetInfo.majors);\n  //             setName(targetInfo.name);\n  //             console.log(targetInfo.name, \"name\")\n  //             setAbout(targetInfo.bio);\n  //             setImage(targetInfo.image)}\n  //         else {\n  //         setError(\"Error fetching userInfo.\");\n  //         }\n  //     }\n  // catch(error) {\n  //     console.log(\"Error fetching userInfo.\")\n\n  // }\n  //   }\n\n  async function setUserInfo(userId) {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/get-user-info2`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      if (data.success) {\n        console.log(data.value.Fullname);\n        setName(data.value.Fullname || 'Unknown');\n        setMajor(data.value.Majors || []);\n        setAbout(data.value.Bio || 'No bio provided');\n        setImage(data.value.profile_pic || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\");\n        setEmail(data.value.Personal_mail || 'Unknown');\n        setPhone(data.value.Phone || 'Unknown');\n        setYear(data.value.Year || 'Unknown');\n        setTags(data.value.Tags || []);\n        setCreate_date(data.value.create_date || '');\n        setGender(data.value.Gender || 'Unknown');\n        setCourse(data.value.Courses || []);\n        setBirth(data.value.Birthday || '');\n      } else {\n        setError(\"Error fetching userInfo.\");\n      }\n    } catch (error) {\n      console.log(\"Error fetching userInfo.\");\n    }\n  }\n  async function getComments(userId) {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/get-comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uid: userId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setComments(data.value);\n      } else {\n        setError(\"Error fetching comments.\");\n      }\n    } catch (error) {\n      alert(\"Server error!\");\n      console.log(error);\n    }\n  }\n  const handleDelete = async commentId => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/delete-comment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uid: userId,\n          commentId: commentId,\n          fromUid: uid //replace with actual uid\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setComments(comments.filter(comment => commentId !== commentId));\n      } else {\n        setError(\"Error with deleting comment.\");\n      }\n    } catch (error) {\n      alert(\"Server error!\");\n      console.log(error);\n    }\n  };\n  const handleLikes = async commentId => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/like-comment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uid: userId,\n          commentId: commentId,\n          fromUid: uid\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        console.log(`Liked comment: ${commentId}`);\n      } else {\n        console.log(\"error\");\n      }\n    } catch (error) {\n      alert(\"Server error!\");\n      console.log(error);\n    }\n    getComments(userId);\n  };\n  const handleInput = async e => {\n    e.preventDefault();\n    console.log(\"Entered handleInput\");\n    if (!newComment.trim()) return;\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/add-comment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uid: userId,\n          content: newComment,\n          fromUid: uid\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        console.log(data.message);\n        setNewComment(\"\");\n        getComments(userId);\n      } else {\n        console.log(\"Error setting comments\");\n      }\n    } catch (error) {\n      alert(\"Server error!\");\n      console.log(error);\n    }\n  };\n  async function handleNewChat(user, target) {\n    try {\n      if (user != target && user && target) {\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/create-new-chat`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: user,\n            targetId: target\n          })\n        });\n        const data = await response.json();\n        if (response.ok && data.value && data.success) {\n          navigate('/chat', {\n            state: {\n              activeId: data.value.id\n            }\n          });\n        } else {\n          alert(data.message);\n        }\n      } else {\n        alert(\"Cannot create a chat with youself or Please log in\");\n      }\n    } catch (error) {\n      console.error('Error creating chat:', error);\n    }\n  }\n  useEffect(() => {\n    console.log(uid);\n    if (userId) {\n      setUserInfo(userId);\n      getComments(userId);\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"\",\n          height: \"100px\",\n          width: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" Major: \", Array.isArray(major) ? major.join(', ') : major, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", about, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personal-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Year: \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", Gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags-courses-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tags: \", Array.isArray(tags) ? tags.join(', ') : tags]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Courses: \", Array.isArray(course) ? course.join(', ') : course]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: Array.isArray(comments) && comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"comment-text\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [comment.content, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faThumbsUp,\n            className: \"like-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 37\n          }, this), \" \", comment.likes, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLikes(comment.id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interaction-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNewChat(uid, userId),\n        children: \"Send a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleInput,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-comment\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"New comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"wXknhJ/7TCWmL+K0HvGX5lQTlpI=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Card;\nexport { Card };\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useNavigate","React","useState","useEffect","useUser","FontAwesomeIcon","faThumbsUp","jsxDEV","_jsxDEV","Card","userId","onClose","_s","name","setName","major","setMajor","about","setAbout","comments","setComments","image","setImage","newComment","setNewComment","email","setEmail","course","setCourse","phone","setPhone","year","setYear","tags","setTags","create_date","setCreate_date","Gender","setGender","birth","setBirth","uid","setUid","error","setError","navigate","setUserInfo","response","fetch","process","env","REACT_APP_SERVER_URL","method","headers","body","JSON","stringify","user","ok","Error","data","json","success","console","log","value","Fullname","Majors","Bio","profile_pic","Personal_mail","Phone","Year","Tags","Courses","Birthday","getComments","alert","handleDelete","commentId","fromUid","filter","comment","handleLikes","handleInput","e","preventDefault","trim","content","message","handleNewChat","target","targetId","state","activeId","id","className","children","src","alt","height","width","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","join","length","map","icon","likes","onClick","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/jiwoo/Desktop/CS_35L/project-6/TutorMatch/tutormatch/frontend/src/components/Card.js"],"sourcesContent":["import './Card.css';\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect} from \"react\";\nimport { useUser } from '../userContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\n\n\nimport \"../html/Profile.css\"\n\nfunction Card({userId, onClose}) {\n    const [name, setName] = useState('Name');\n    const [major, setMajor] = useState([]);\n    const [about, setAbout] = useState(\"ok\");\n    const [comments, setComments] = useState([]);\n    const [image, setImage] = useState(\"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\")\n    const [newComment, setNewComment] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [course, setCourse] = useState([]);\n    const [phone, setPhone] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [tags, setTags] = useState(\"\");\n    const [create_date, setCreate_date] = useState(\"\");\n    const [Gender, setGender] = useState(\"\");\n    const [birth, setBirth] = useState(\"\");\n    const { uid, setUid } = useUser();\n    const [error, setError] = useState(null);\n    let navigate = useNavigate();\n\n\n    // async function setUserInfo(userId) {\n    //     try {\n    //         const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/get-user-info`, {\n    //             method: 'POST',\n    //             headers: {\n    //             'Content-Type': 'application/json'\n    //             },\n    //             body: JSON.stringify({ user: userId })\n    //             },\n    //         );\n    //         if (!response.ok) {\n    //             throw new Error('Network response was not ok');\n    //         }\n    //         const data = await response.json();\n    //         if (data.success) {\n    //             const targetInfo = data.value;\n    //             setMajor(targetInfo.majors);\n    //             console.log(targetInfo.majors);\n    //             setName(targetInfo.name);\n    //             console.log(targetInfo.name, \"name\")\n    //             setAbout(targetInfo.bio);\n    //             setImage(targetInfo.image)}\n    //         else {\n    //         setError(\"Error fetching userInfo.\");\n    //         }\n    //     }\n    // catch(error) {\n    //     console.log(\"Error fetching userInfo.\")\n\n    // }\n    //   }\n\n      async function setUserInfo(userId) {\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/get-user-info2`, {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ user: userId })\n                },\n            );\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            if (data.success) {\n              console.log(data.value.Fullname )\n                setName(data.value.Fullname || 'Unknown');\n                setMajor(data.value.Majors || []);\n                setAbout(data.value.Bio || 'No bio provided');\n                setImage(data.value.profile_pic || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\");\n                setEmail(data.value.Personal_mail || 'Unknown');\n                setPhone(data.value.Phone || 'Unknown');\n                setYear(data.value.Year || 'Unknown');\n                setTags(data.value.Tags || []);\n                setCreate_date(data.value.create_date || '');\n                setGender(data.value.Gender || 'Unknown');\n                setCourse(data.value.Courses || []);\n                setBirth(data.value.Birthday || '');}\n            else {\n            setError(\"Error fetching userInfo.\");\n            }\n        }\n    catch(error) {\n        console.log(\"Error fetching userInfo.\")\n\n    }\n      }\n    async function getComments(userId){\n        try {\n          const response = await fetch(\n            `${process.env.REACT_APP_SERVER_URL}/get-comments`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                uid: userId,             \n              }),\n            }\n          );\n    \n          const data = await response.json();\n          if (data.success) {\n            setComments(data.value);\n          } else {\n            setError(\"Error fetching comments.\");\n          }\n        } catch (error) {\n          alert(\"Server error!\");\n          console.log(error);\n        }\n      }\n      const handleDelete = async (commentId) => {\n        try {\n          const response = await fetch(\n            `${process.env.REACT_APP_SERVER_URL}/delete-comment`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                uid: userId,\n                commentId: commentId,\n                fromUid: uid, //replace with actual uid\n              }),\n            }\n          );\n    \n          const data = await response.json();\n    \n          if (data.success) {\n            setComments(comments.filter((comment) => commentId !== commentId));\n          } else {\n            setError(\"Error with deleting comment.\");\n          }\n        } catch (error) {\n          alert(\"Server error!\");\n          console.log(error);\n        }\n      };\n    \n      const handleLikes = async (commentId) => {\n          try {\n            const response = await fetch(\n              `${process.env.REACT_APP_SERVER_URL}/like-comment`,\n              {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  uid: userId,   \n                  commentId: commentId,\n                  fromUid: uid\n                }),\n              }\n            );\n    \n            const data = await response.json();\n    \n            if (data.success) {\n                console.log(`Liked comment: ${commentId}`);\n            } else {\n                console.log(\"error\")\n            }\n          } catch (error) {\n            alert(\"Server error!\");\n            console.log(error);\n          }\n          getComments(userId);\n      };\n    \n      const handleInput = async (e) => {\n        e.preventDefault();\n        console.log(\"Entered handleInput\")\n        if (!newComment.trim()) return;\n        try {\n          const response = await fetch(\n            `${process.env.REACT_APP_SERVER_URL}/add-comment`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                uid: userId, \n                content: newComment,\n                fromUid: uid,\n              }),\n            }\n          );\n    \n          const data = await response.json();\n    \n          if (data.success) {\n            console.log(data.message);\n            setNewComment(\"\");\n            getComments(userId);\n\n          } else {\n            console.log(\"Error setting comments\");\n          }\n        } catch (error) {\n          alert(\"Server error!\");\n          console.log(error);\n        }\n      };\n\n      async function handleNewChat(user, target) {\n        try {\n        if (user!=target && user && target) {\n          const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/create-new-chat`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              userId: user,\n              targetId: target,\n            }),\n          });\n          const data = await response.json();\n          if (response.ok && data.value && data.success) {\n            navigate('/chat', { state: { activeId: data.value.id } });\n          } else {\n            alert(data.message);\n\n          }\n        }\n        else {alert(\"Cannot create a chat with youself or Please log in\")}\n        } catch (error) {\n          console.error('Error creating chat:', error);\n        }\n      }\n\n      useEffect(() => {\n        console.log(uid)\n        if(userId) {\n            setUserInfo(userId);\n            getComments(userId)}\n      }, [userId]);\n\n      return (\n        <div className='Card'>\n            <div className='upper-container'>\n                <div className='image-container'>\n                    <img src={image} alt='' height='100px' width='100px' />\n                </div>\n            </div>\n            <div className='user-info-container'>\n                <h2> {name} </h2>\n                <h4> Major: {Array.isArray(major) ? major.join(', ') : major} </h4>\n                <p> {about} </p>\n            </div>\n            <div className='contact-info-container'>\n                <p>Email: {email}</p>\n                <p>Phone: {phone}</p>\n            </div>\n            <div className='personal-info-container'>\n                <p>Year: {year}</p>\n                <p>Gender: {Gender}</p>\n                {/* <p>Birth Date: {birth}</p> */}\n            </div>\n            <div className='tags-courses-container'>\n                <p>Tags: {Array.isArray(tags) ? tags.join(', ') : tags}</p>\n                <p>Courses: {Array.isArray(course) ? course.join(', ') : course}</p>\n            </div>\n            <div className='comments-container'>\n              {Array.isArray(comments)&& comments.length > 0 ? (\n              <ul className='comment-text'>\n                {comments.map((comment) => (\n                  <li key={comment.id}>\n                  {comment.content} <FontAwesomeIcon icon={faThumbsUp} className=\"like-icon\"/> {comment.likes}\n                <button onClick={() => handleLikes(comment.id)}>Like</button>\n                {/*<button onClick={() => handleDelete(comment.id)}>Delete</button>*/}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No comments found.</p>\n          )}\n            </div>\n            <div className='interaction-container'>\n                <button onClick={() => handleNewChat(uid, userId)}>Send a message</button>\n                <form onSubmit={handleInput}>\n                    <input\n                        type=\"text\"\n                        className=\"input-comment\"\n                        value={newComment}\n                        onChange={(e) => setNewComment(e.target.value)}\n                        placeholder=\"New comment\"\n                    />\n                    <button type=\"submit\">Submit Comment</button>\n                </form>\n            </div>\n        </div>\n    );\n      }\n\nexport {Card};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}