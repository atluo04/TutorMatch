{"ast":null,"code":"var _jsxFileName = \"/Users/jiwoo/Desktop/CS_35L/project-6/TutorMatch/tutormatch/frontend/src/components/chat/chatComponents/ChatContent.js\";\nimport React, { Component, createRef } from \"react\";\nimport \"./chatContent.css\";\nimport Avatar from \"./Avatar.js\";\nimport ChatItem from \"./ChatItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleTime = date => {\n  const parsedDate = new Date(date);\n  const now = new Date();\n  const timepast = (now.getTime() - parsedDate.getTime()) / 1000;\n  if (timepast < 60) {\n    return `Just now`;\n  } else if (timepast < 3600) {\n    return `${Math.floor(timepast / 60)} minutes ago`;\n  } else if (timepast < 3600 * 24) {\n    return `${Math.floor(timepast / 3600)} hours ago`;\n  } else {\n    return `${new Date(parsedDate).toLocaleString('en-US')}`;\n  }\n};\nexport default class ChatContent extends Component {\n  constructor(props) {\n    super(props);\n    this.messagesEndRef = /*#__PURE__*/createRef(null);\n    this.handleNewMessage = newMessage => {\n      //To be modifeied, we may use update to load the history instead of use the subscribe entirely\n      if (newMessage.conversationId == this.state.conversationId || !newMessage.conversationId) {\n        this.setState(prevState => {\n          return {\n            chat: [...prevState.chat, {\n              type: newMessage.sender === this.props.userId ? \"me\" : \"other\",\n              msgType: newMessage.type || \"text\",\n              fileName: newMessage.fileName || null,\n              msg: newMessage.content,\n              image: newMessage.sender === this.props.userId ? this.state.userImage : this.state.otherUserImage,\n              timestamp: newMessage.timestamp,\n              id: newMessage.id\n            }]\n          };\n        }, () => {\n          this.scrollToBottom();\n        });\n      }\n      ;\n    };\n    this.sendMessage = async (conversationId, message, user) => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/send-messages`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            conversationId: conversationId,\n            message: message,\n            user: user\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        return data;\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n        throw error;\n      }\n    };\n    this.handleSubmit = (e, currentConversationId) => {\n      e.preventDefault();\n      if (currentConversationId && this.props.userId) {\n        const {\n          msg,\n          chat\n        } = this.state;\n        this.setState(prevState => ({\n          msg: \"\"\n        }), () => {\n          this.scrollToBottom();\n        });\n        this.sendMessage(currentConversationId, msg, this.props.userId);\n        console.log(\"send, msg\");\n      }\n    };\n    //call storeImage/storeFile to store the data\n    this.storeFile = async (conversationId, file, userId) => {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('conversationId', conversationId);\n      formData.append('user', userId);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/store-conversation-files`, {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        return result.success;\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n        return false;\n      }\n    };\n    this.handleFileUpload = async e => {\n      const file = e.target.files[0];\n      console.log(file, \"file to upload\");\n      try {\n        if (file) {\n          const upload = await this.storeFile(this.state.conversationId, file, this.props.userId);\n          if (upload) {\n            console.log(\"Success in file uploading\");\n          } else {\n            console.log(\"Fail in file uploading \");\n          }\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    this.triggerFileInput = () => {\n      this.fileInputRef.current.click();\n    };\n    this.scrollToBottom = () => {\n      this.messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    this.onStateChange = e => {\n      this.setState({\n        msg: e.target.value\n      });\n    };\n    this.state = {\n      chat: [],\n      conversationId: this.props.conversationId,\n      msg: \"\",\n      userImage: \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\",\n      otherUserImage: \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\",\n      userName: \"ABC\",\n      otherUserName: \"Bruin\"\n    };\n    this.fileInputRef = /*#__PURE__*/React.createRef();\n  }\n  async receiveMessage(conversationId, handleAdd, userId, lastTimestamp) {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/receive-messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          conversationId: conversationId,\n          lastTimestamp: lastTimestamp\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const val = data.value;\n      let messages = [];\n      let newLastTimestamp = null;\n      if (data && data.success === true) {\n        messages = val.newMessages || [];\n        newLastTimestamp = val.lastTimestamp;\n      } else {\n        messages = [];\n      }\n      messages.forEach(message => {\n        handleAdd(message);\n      });\n      this.timer = setTimeout(() => this.receiveMessage(conversationId, handleAdd, userId, newLastTimestamp), 5000);\n    } catch (error) {\n      console.error(\"Error receiving messages:\", error);\n    }\n  }\n  async componentDidMount() {\n    if (this.props.userId) {\n      if (this.props.userInfo) {\n        const userImage = this.props.userInfo.userImage || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n        const userName = this.props.userInfo.userName;\n        console.log(this.props.userInfo);\n        this.setState({\n          userImage,\n          userName\n        });\n      }\n      if (this.props.conversations) {\n        const otherUserInfo = this.props.conversations.find(conversation => conversation.conversationId === this.props.conversationId);\n        if (otherUserInfo) {\n          const otherUserImage = otherUserInfo.image || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n          const otherUserName = otherUserInfo.name;\n          this.setState({\n            otherUserImage: otherUserImage,\n            otherUserName: otherUserName\n          });\n        }\n      }\n      if (this.state.conversationId) {\n        this.receiveMessage(this.state.conversationId, this.handleNewMessage, this.props.userId, null);\n      }\n    }\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    this.scrollToBottom();\n  }\n  async componentDidUpdate(prevProps) {\n    if (prevProps.conversationId != this.props.conversationId) {\n      clearTimeout(this.timer);\n      console.log(this.props.userInfo, '?');\n      if (this.props.userId) {\n        console.log(this.props.userInfo, '?');\n        if (this.props.userInfo) {\n          const userImage = this.props.userInfo.image || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n          const userName = this.props.userInfo.name;\n          this.setState({\n            userImage: userImage,\n            userName: userName\n          });\n        }\n        if (this.props.conversations) {\n          const otherUserInfo = this.props.conversations.find(conversation => conversation.conversationId === this.props.conversationId);\n          if (otherUserInfo) {\n            const otherUserImage = otherUserInfo.image || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n            const otherUserName = otherUserInfo.name;\n            this.setState({\n              otherUserImage: otherUserImage,\n              otherUserName: otherUserName\n            });\n          }\n          ;\n        }\n      }\n      this.setState({\n        conversationId: this.props.conversationId,\n        chat: []\n      }, () => {\n        this.receiveMessage(this.props.conversationId, this.handleNewMessage, this.props.userId, null);\n      });\n    }\n  }\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__chatcontent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blocks\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-chatting-user\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              isOnline: \"active\",\n              image: this.state.otherUserImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.otherUserName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blocks\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat__items\",\n          children: [Array.isArray(this.state.chat) && this.state.chat.map((itm, index) => {\n            return (\n              /*#__PURE__*/\n              //adding chat items, (previous messages i guess)\n              _jsxDEV(ChatItem, {\n                animationDelay: index + 2,\n                user: itm.type ? itm.type : \"me\",\n                type: itm.msgType,\n                msg: itm.msg,\n                image: itm.image,\n                fileName: itm.fileName,\n                timestamp: handleTime(itm.timestamp)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)\n            );\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: this.messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), this.props.conversationId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sendNewMessage\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addFiles\",\n            onClick: e => this.triggerFileInput(),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: this.fileInputRef,\n            onChange: this.handleFileUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            onChange: this.onStateChange,\n            value: this.state.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnSendMsg\",\n            id: \"sendMsgBtn\",\n            onClick: e => this.handleSubmit(e, this.state.conversationId),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), !this.props.conversationId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__footer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Select a Conversation to start \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","createRef","Avatar","ChatItem","jsxDEV","_jsxDEV","handleTime","date","parsedDate","Date","now","timepast","getTime","Math","floor","toLocaleString","ChatContent","constructor","props","messagesEndRef","handleNewMessage","newMessage","conversationId","state","setState","prevState","chat","type","sender","userId","msgType","fileName","msg","content","image","userImage","otherUserImage","timestamp","id","scrollToBottom","sendMessage","message","user","response","fetch","process","env","REACT_APP_SERVER_URL","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","handleSubmit","e","currentConversationId","preventDefault","log","storeFile","file","formData","FormData","append","result","success","handleFileUpload","target","files","upload","triggerFileInput","fileInputRef","current","click","scrollIntoView","behavior","onStateChange","value","userName","otherUserName","receiveMessage","handleAdd","lastTimestamp","val","messages","newLastTimestamp","newMessages","forEach","timer","setTimeout","componentDidMount","userInfo","conversations","otherUserInfo","find","conversation","name","window","addEventListener","handleKeyDown","componentDidUpdate","prevProps","clearTimeout","componentWillUnmount","render","className","children","isOnline","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","itm","index","animationDelay","ref","onClick","onChange","style","display","placeholder"],"sources":["/Users/jiwoo/Desktop/CS_35L/project-6/TutorMatch/tutormatch/frontend/src/components/chat/chatComponents/ChatContent.js"],"sourcesContent":["import React, { Component, createRef} from \"react\";\nimport \"./chatContent.css\";\nimport Avatar from \"./Avatar.js\";\nimport ChatItem from \"./ChatItem.js\";\n\nconst handleTime = (date) => {\n  const parsedDate = new Date(date)\n  const now = new Date();\n  const timepast = (now.getTime() - parsedDate.getTime()) / 1000;\n  if (timepast < 60) {\n    return `Just now`\n  }\n  else if (timepast < 3600) {\n    return `${Math.floor(timepast / 60)} minutes ago`;\n  }\n  else if (timepast < 3600*24 ) {\n    return `${Math.floor(timepast / 3600)} hours ago`;\n  }\n  else {\n    return `${new Date(parsedDate).toLocaleString('en-US')}`\n  }\n}\n\nexport default class ChatContent extends Component {\n  messagesEndRef = createRef(null);\n  constructor(props) {\n    super(props);\n    this.state = {\n      chat: [],\n      conversationId: this.props.conversationId,\n      msg: \"\",\n      userImage: \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\",\n      otherUserImage: \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\",\n      userName: \"ABC\",\n      otherUserName:\"Bruin\"\n    };\n    this.fileInputRef = React.createRef();\n  }\n  handleNewMessage = (newMessage) => {\n    //To be modifeied, we may use update to load the history instead of use the subscribe entirely\n    if (newMessage.conversationId == this.state.conversationId || !newMessage.conversationId) {\n      this.setState(prevState => {\n        return {\n          chat: [...prevState.chat, {\n              type: newMessage.sender === this.props.userId ? \"me\" : \"other\",\n              msgType: newMessage.type || \"text\",\n              fileName: newMessage.fileName || null,\n              msg: newMessage.content,\n              image: newMessage.sender === this.props.userId ? this.state.userImage : this.state.otherUserImage,\n              timestamp: newMessage.timestamp,\n              id: newMessage.id \n          }]\n        };\n      }, () => {\n        this.scrollToBottom();\n      })};\n    }\n\n    async receiveMessage (conversationId, handleAdd, userId, lastTimestamp) {\n      try {\n          const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/receive-messages`, {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                  conversationId: conversationId,\n                  lastTimestamp: lastTimestamp, \n              }),\n          });\n  \n          if (!response.ok) {\n              throw new Error('Network response was not ok');\n          }\n          const data = await response.json();\n          const val = data.value;\n          let messages = [];\n          let newLastTimestamp = null;\n          if (data && data.success === true) {\n            messages = val.newMessages || []; \n            newLastTimestamp = val.lastTimestamp;\n        } else {\n            messages = []; \n        }\n            messages.forEach(message => {\n              handleAdd(message);\n            });\n  \n          this.timer = setTimeout(() => this.receiveMessage(conversationId, handleAdd, userId, newLastTimestamp), 5000);\n      } catch (error) {\n          console.error(\"Error receiving messages:\", error);\n      }\n  }\n  sendMessage = async (conversationId, message, user) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/send-messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          conversationId: conversationId,\n          message: message,\n          user: user\n        }),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n  \n      const data = await response.json();\n      return data; \n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      throw error;\n    }\n  };\n\n  handleSubmit = (e, currentConversationId) => {\n    e.preventDefault(); \n    if (currentConversationId && this.props.userId) {\n    const { msg, chat } = this.state;\n  \n    this.setState((prevState) => ({\n        msg: \"\",\n    }), () => {\n        this.scrollToBottom(); \n    }); \n    this.sendMessage(currentConversationId, msg, this.props.userId)\n    console.log(\"send, msg\")\n  }}; \n\n  //call storeImage/storeFile to store the data\n  storeFile = async (conversationId, file, userId) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('conversationId', conversationId);\n    formData.append('user', userId);\n  \n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/store-conversation-files`, {\n        method: 'POST',\n        body: formData, \n      });\n  \n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n  \n      const result = await response.json();\n      return result.success;\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      return false; \n    }\n  }\n  handleFileUpload = async(e) => {\n    const file = e.target.files[0];\n    console.log(file, \"file to upload\")\n    try {\n      if (file) {\n        const upload = await this.storeFile(this.state.conversationId, file, this.props.userId);\n        if (upload) {\n          console.log(\"Success in file uploading\")\n        }\n        else {console.log(\"Fail in file uploading \")}\n      }\n\n    }\n    catch(error) {\n      console.log(error.message)\n    } \n  }\n\n  triggerFileInput = () => {\n    this.fileInputRef.current.click();\n  }\n\n  scrollToBottom = () => {\n    this.messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  async componentDidMount() {\n    if (this.props.userId) {\n      if (this.props.userInfo) {\n        const userImage = this.props.userInfo.userImage || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n        const userName = this.props.userInfo.userName;\n        console.log(this.props.userInfo)\n        this.setState({ userImage, userName });\n        }\n      if (this.props.conversations) {\n        const otherUserInfo = this.props.conversations.find(conversation => \n          conversation.conversationId === this.props.conversationId\n        );\n        if (otherUserInfo) {\n        const otherUserImage = otherUserInfo.image || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n        const otherUserName = otherUserInfo.name;\n        this.setState({ otherUserImage: otherUserImage, otherUserName: otherUserName });\n      }}\n      if (this.state.conversationId) {\n        this.receiveMessage(this.state.conversationId, this.handleNewMessage, this.props.userId, null);}\n    }\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    this.scrollToBottom();\n  }\n\n\n  onStateChange = (e) => {\n    this.setState({ msg: e.target.value });\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.conversationId != this.props.conversationId) {\n      clearTimeout(this.timer);\n      console.log(this.props.userInfo, '?')\n      if (this.props.userId) {\n        console.log(this.props.userInfo, '?')\n        if (this.props.userInfo) {\n          const userImage = this.props.userInfo.image || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n          const userName = this.props.userInfo.name;\n          this.setState({ userImage:userImage, userName:userName });\n          }\n        \n        if (this.props.conversations) {\n          const otherUserInfo = this.props.conversations.find(conversation => \n            conversation.conversationId === this.props.conversationId\n          );\n          if (otherUserInfo) {\n          const otherUserImage = otherUserInfo.image || \"https://i.pinimg.com/236x/39/a1/eb/39a1eb1485516800d84981a72840d60e.jpg\";\n          const otherUserName = otherUserInfo.name;\n          this.setState({ otherUserImage: otherUserImage, otherUserName: otherUserName })};\n        }\n      }\n      this.setState({ conversationId: this.props.conversationId, chat: [] }, () => {\n        this.receiveMessage(this.props.conversationId, this.handleNewMessage, this.props.userId, null);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n\n  render() {\n    return (\n      <div className=\"main__chatcontent\">\n        <div className=\"content__header\">\n          <div className=\"blocks\">\n            <div className=\"current-chatting-user\">\n              <Avatar\n                isOnline=\"active\"\n                image={this.state.otherUserImage}\n              />\n              <p>{this.state.otherUserName}</p>\n            </div>\n          </div>\n\n          <div className=\"blocks\">\n            <div className=\"settings\">\n            </div>\n          </div>\n        </div>\n        <div className=\"content__body\">\n          <div className=\"chat__items\">\n            {Array.isArray(this.state.chat) && this.state.chat.map((itm, index) => {\n              return (\n                //adding chat items, (previous messages i guess)\n                <ChatItem\n                  animationDelay={index + 2}\n                  key={index}\n                  user={itm.type ? itm.type : \"me\"}\n                  type={itm.msgType}\n                  msg={itm.msg}\n                  image={itm.image}\n                  fileName = {itm.fileName}\n                  timestamp = {handleTime(itm.timestamp)}\n                />\n              );\n            })}\n            <div ref={this.messagesEndRef} />\n          </div>\n        </div>\n        {this.props.conversationId && (\n        <div className=\"content__footer\">\n          <div className=\"sendNewMessage\">\n            <button className=\"addFiles\" onClick={(e) => this.triggerFileInput()}>\n              <i className=\"fa fa-plus\"></i>\n            </button>\n            <input\n              type=\"file\"\n              ref={this.fileInputRef}\n              onChange={this.handleFileUpload}\n              style={{ display:'none' }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Type a message here\"\n              onChange={this.onStateChange}\n              value={this.state.msg}\n            />\n            <button className=\"btnSendMsg\" id=\"sendMsgBtn\" onClick={(e) => this.handleSubmit(e, this.state.conversationId)}>\n              <i className=\"fa fa-paper-plane\"></i>\n            </button>\n          </div>\n        </div>\n        )}\n        {!this.props.conversationId && (\n          <div className=\"content__footer\">\n          <span> Select a Conversation to start </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}