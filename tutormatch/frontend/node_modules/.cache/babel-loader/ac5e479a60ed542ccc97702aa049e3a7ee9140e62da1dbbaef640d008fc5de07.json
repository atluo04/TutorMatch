{"ast":null,"code":"import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\nfunction getKeyframes(value, valueName, target, transition) {\n  const isTargetAnimatable = isAnimatable(valueName, target);\n  let keyframes;\n  if (Array.isArray(target)) {\n    keyframes = [...target];\n  } else {\n    keyframes = [null, target];\n  }\n  const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n  let animatableTemplateValue = undefined;\n  const noneKeyframeIndexes = [];\n  for (let i = 0; i < keyframes.length; i++) {\n    /**\n     * Fill null/wildcard keyframes\n     */\n    if (keyframes[i] === null) {\n      keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n    }\n    if (isNone(keyframes[i])) {\n      noneKeyframeIndexes.push(i);\n    }\n    // TODO: Clean this conditional, it works for now\n    if (typeof keyframes[i] === \"string\" && keyframes[i] !== \"none\" && keyframes[i] !== \"0\") {\n      animatableTemplateValue = keyframes[i];\n    }\n  }\n  if (isTargetAnimatable && noneKeyframeIndexes.length && animatableTemplateValue) {\n    for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n      const index = noneKeyframeIndexes[i];\n      keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n    }\n  }\n  return keyframes;\n}\nexport { getKeyframes };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}