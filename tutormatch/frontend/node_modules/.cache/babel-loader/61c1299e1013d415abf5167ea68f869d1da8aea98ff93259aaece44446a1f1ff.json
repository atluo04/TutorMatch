{"ast":null,"code":"var _jsxFileName = \"/Users/jiwoo/Desktop/CS_35L/project-6/TutorMatch/tutormatch/frontend/src/pages/Registration.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { PasswordEmailInput } from \"../components/PasswordEmailInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../userContext\";\nimport \"../html/Registration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationPage() {\n  _s();\n  // State for registration form\n  const {\n    uid,\n    setUid\n  } = useUser();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleRegistration = async () => {\n    if (process.env.REACT_APP_NODE_ENV !== \"development\") {\n      const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailPattern.test(email)) {\n        setError(\"Invalid Email\");\n        console.log(\"Invalid Email\");\n        return;\n      }\n      const passwordMessage = validatePassword();\n      if (passwordMessage !== null) {\n        setError(passwordMessage);\n        console.log(passwordMessage);\n        return;\n      }\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setEmail(\"\");\n        setPassword(\"\");\n        setUid(data.uid);\n        navigate(\"/info\");\n      } else {\n        setError(\"Invalid username or password! Please try again.\");\n      }\n    } catch (error) {\n      alert(\"Server error!\");\n      console.log(error);\n    }\n  };\n  const validatePassword = () => {\n    const correctLength = /^.{8,16}$/;\n    if (!correctLength.test(password)) {\n      return \"Password must be between 8 and 16 characters long.\";\n    }\n    const noWhiteSpace = /^S*$/;\n    if (noWhiteSpace.test(password)) {\n      return \"Password must not contain whitespace.\";\n    }\n    const containsUppercase = /^(?=.*[A-Z]).*$/;\n    if (!containsUppercase.test(password)) {\n      return \"Password must contain at least 1 uppercase letter.\";\n    }\n    const containsLowercase = /^(?=.*[a-z]).*$/;\n    if (!containsLowercase.test(password)) {\n      return \"Password must contain at least 1 lowercase letter.\";\n    }\n    const containsSpecialChar = /^(?=.*[,.!@#$%^&*~:;'\\\"()-+=~`_\\[\\]\\\\/?|]).*$/;\n    if (!containsSpecialChar.test(password)) {\n      return \"Password must contain at least 1 special character.\";\n    }\n    if (password != confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(PasswordEmailInput, {\n          placeHolderText: \"Email\",\n          handleInput: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(PasswordEmailInput, {\n          placeHolderText: \"Password\",\n          handleInput: setPassword,\n          isPassword: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(PasswordEmailInput, {\n          placeHolderText: \"Confirm Password\",\n          handleInput: setConfirmPassword,\n          isPassword: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: handleRegistration,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationPage, \"YxbRcdNT8WBoyRuoSEIdL078tSI=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = RegistrationPage;\nexport { RegistrationPage };\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["useState","PasswordEmailInput","useNavigate","useUser","jsxDEV","_jsxDEV","RegistrationPage","_s","uid","setUid","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleRegistration","process","env","REACT_APP_NODE_ENV","emailPattern","test","console","log","passwordMessage","validatePassword","response","fetch","REACT_APP_SERVER_URL","method","headers","body","JSON","stringify","data","json","success","alert","correctLength","noWhiteSpace","containsUppercase","containsLowercase","containsSpecialChar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeHolderText","handleInput","isPassword","onClick","_c","$RefreshReg$"],"sources":["/Users/jiwoo/Desktop/CS_35L/project-6/TutorMatch/tutormatch/frontend/src/pages/Registration.js"],"sourcesContent":["import { useState } from \"react\";\nimport { PasswordEmailInput } from \"../components/PasswordEmailInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../userContext\";\nimport \"../html/Registration.css\"\n\nfunction RegistrationPage() {\n  // State for registration form\n  const {uid, setUid} = useUser();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const handleRegistration = async () => {\n    if (process.env.REACT_APP_NODE_ENV !== \"development\") {\n      const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailPattern.test(email)) {\n        setError(\"Invalid Email\");\n        console.log(\"Invalid Email\");\n        return;\n      }\n      const passwordMessage = validatePassword();\n      if (passwordMessage !== null) {\n        setError(passwordMessage);\n        console.log(passwordMessage);\n        return;\n      }\n    }\n    try {\n      const response = await fetch(\n            `${process.env.REACT_APP_SERVER_URL}/register`,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password,\n                }),\n            }\n        );\n\n        const data = await response.json();\n\n        if (data.success) {\n            setEmail(\"\");\n            setPassword(\"\");\n            setUid(data.uid);\n            navigate(\"/info\");\n        } else {\n            setError(\"Invalid username or password! Please try again.\");\n        }\n    } catch (error) {\n        alert(\"Server error!\");\n        console.log(error);\n    }\n  };\n\n  const validatePassword = () => {\n    const correctLength = /^.{8,16}$/;\n    if (!correctLength.test(password)) {\n      return \"Password must be between 8 and 16 characters long.\";\n    }\n    const noWhiteSpace = /^S*$/;\n    if (noWhiteSpace.test(password)) {\n      return \"Password must not contain whitespace.\";\n    }\n    const containsUppercase = /^(?=.*[A-Z]).*$/;\n    if (!containsUppercase.test(password)) {\n      return \"Password must contain at least 1 uppercase letter.\";\n    }\n    const containsLowercase = /^(?=.*[a-z]).*$/;\n    if (!containsLowercase.test(password)) {\n      return \"Password must contain at least 1 lowercase letter.\";\n    }\n    const containsSpecialChar = /^(?=.*[,.!@#$%^&*~:;'\\\"()-+=~`_\\[\\]\\\\/?|]).*$/;\n    if (!containsSpecialChar.test(password)) {\n      return \"Password must contain at least 1 special character.\";\n    }\n    if (password != confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"registration-container\">\n      <div className=\"header\">\n        <div className=\"title\">Registration</div>\n        <div className=\"underline\"></div>\n      </div>\n      <div className=\"inputs\">\n        <div className=\"input\">\n          <PasswordEmailInput\n            placeHolderText={\"Email\"}\n            handleInput={setEmail}\n          />\n        </div>\n        <div className=\"input\">\n          <PasswordEmailInput\n            placeHolderText={\"Password\"}\n            handleInput={setPassword}\n            isPassword={true}\n          />\n        </div>\n        <div className=\"input\">\n          <PasswordEmailInput\n            placeHolderText={\"Confirm Password\"}\n            handleInput={setConfirmPassword}\n            isPassword={true}\n          />\n        </div>\n        <div>\n          <span className=\"error\">{error}</span>\n        </div>\n        <div className=\"submit-container\">\n          <div className=\"button\" onClick={handleRegistration}>\n            Register\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { RegistrationPage };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}